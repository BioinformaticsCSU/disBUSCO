#!/usr/bin/env python
import sys,os,time,socket,random,getpass
from multiprocessing import Pool,Manager
import numpy

def run(hostid):
    while(len(lists)>0):
        dbid=lists.pop(0)
        id=hosts[hostid]+"_"+str(os.getpid())
        with open(query_db+id,'w') as f:
            f.write(dbd[dbid][0])
            f.write(dbd[dbid][1])
        cmd="ssh "+hosts[hostid]+" -C '"+tblastn_bin+" -evalue "+evalue+" -num_threads 1 -query "+query_db+id+" -db "+blast_db+" -out "+blast_out+id+".tsv -outfmt 7'"
        info=os.popen(cmd+" 2>/dev/null && cat "+blast_out+id+".tsv >>"+blast_out+id+"_all.tsv")
        info.readlines()
    return cmd

opts=sys.argv
tblastn_bin=os.popen("which tblastn").readlines()
if len(tblastn_bin)==0:
    print("can not find tblastn in PATH")
    exit(-1)
tblastn_bin=tblastn_bin[0].strip()
try:
    evalue=opts[opts.index("-evalue") +1]
    query=opts[opts.index("-query")+1]
    db=opts[opts.index("-db")+1]
    out=opts[opts.index("-out")+1]
    outfmt=opts[opts.index("-outfmt")+1]
except ValueError:
    print("".join(os.popen(tblastn_bin+" "+" ".join(sys.argv[1:])).readlines()).strip())
    exit(0)
	

out=os.path.abspath(out)
db=os.path.abspath(db)
trash=os.path.dirname(out)+"/tmp/"
print("trash_dir=",trash)
jobid="busco_"+getpass.getuser()+"_"+str(numpy.random.randint(100000))+"_"


query_db=trash+jobid+"qry_"
blast_db=db
blast_out=trash+jobid+"out_"
hostfile=os.getcwd()+"/buscohosts.txt"

if not os.path.exists(db+".nsq"):
    print("can not find db file "+db)
    exit(-1)
if not os.path.exists(query):
    print("can not find query file "+query)
    exit(-1)
if not os.path.exists(hostfile):
    print("can not find file buscohosts.txt")
    exit(-1)
if not os.path.exists(trash):
    os.mkdir(trash)

with open(query,'r') as f:
    dbcc=f.readlines()
dbc=[]
pstr=''
n=0
for i in range(len(dbcc)):
    if(dbcc[i][0]=='>'):
        if(len(pstr)>0):
            dbc.append(pstr+'\n')
            pstr=''
        n=n+1
        dbc.append(dbcc[i])
    else:
        pstr=pstr+dbcc[i].strip()
dbc.append(pstr)

dbd=[]
print("size of db:",len(dbc)/2)
for i in range(0,len(dbc),2):
    dbd.append([dbc[i],dbc[i+1],len(dbc[i+1])])
#dbd=sorted(dbd,key=lambda dbd:dbd[2],reverse=True)


with open(hostfile,'r') as f:
    hosts=''.join(f.readlines()).strip().split('\n')

lists=Manager().list()
for i in range(len(dbd)):
    lists.append(i)

print("start tblastn at: "+time.asctime( time.localtime(time.time())))
hostset=set(hosts)
for host in hostset:
    print("Run tblastn on "+host+" with "+str(hosts.count(host))+" tasks")
ncpus=len(hosts)
po = Pool(ncpus)
results=[]
for i in range(ncpus):
    results.append(po.apply_async(run,(i,)))
po.close()
po.join()
os.popen("cat "+trash+jobid+"out_*_all.tsv >"+out).readlines()
print("end tblastn at: "+time.asctime( time.localtime(time.time())))

